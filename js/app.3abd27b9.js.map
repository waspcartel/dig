{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseAny","typeUrl","Any","string","bytes","String","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseDuration","Duration","baseEquivocation","height","power","consensusAddress","Equivocation","time","toTimestamp","fork","ldelim","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","v","Coin","delegatedFree","delegatedVesting","e","map","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","baseFungibleTokenPacketData","denom","sender","receiver","FungibleTokenPacketData","uint64","baseDenomTrace","path","baseDenom","DenomTrace","baseParams","sendEnabled","receiveEnabled","Params","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","UNRECOGNIZED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","Header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryGrants","method","types","MsgGrant","MsgExec","MsgRevoke","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","address","signAndBroadcast","msgs","fee","memo","msgGrant","msgExec","msgRevoke","queryClient","baseEventGrant","msgTypeUrl","granter","grantee","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","authorization","expiration","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","Grants","_Structure","GenericAuthorization","Grant","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getGrants","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryGrants","options","subscribe","all","pagination","nextKey","sendMsgGrant","msg","sendMsgExec","sendMsgRevoke","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","total","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","symbol","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","baseMsgVerifyInvariant","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawDelegatorReward","msgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawDelegatorReward","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","queryAllEvidence","queryEvidence","evidenceHash","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgGrantAllowance","msgRevokeAllowance","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","period","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","baseGrant","V1Beta1ProposalStatus","V1Beta1VoteOption","Allowance","Allowances","getAllowance","getAllowances","QueryAllowance","QueryAllowances","sendMsgGrantAllowance","sendMsgRevokeAllowance","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVoteWeighted","MsgSubmitProposal","MsgDeposit","MsgVote","msgVoteWeighted","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","WeightedVoteOption","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVoteWeighted","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","AuthorizationType","msgUndelegate","msgEditValidator","msgBeginRedelegate","msgCreateValidator","msgDelegate","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgEditValidator","sendMsgBeginRedelegate","sendMsgCreateValidator","sendMsgDelegate","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","hash","MsgTransfer","msgTransfer","DenomTraces","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","CosmosCosmosSdkCosmosAuthzV1Beta1","load","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","refresh","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","document","addEventListener","event","connect","keplr","experimentalSuggestChain","chainId","chainName","rpc","rest","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","baseProof","index","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseMsgTransfer","sourcePort","sourceChannel","timeoutTimestamp","token","timeoutHeight","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","DecCoin","baseValidatorCurrentRewards","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseDecCoin","baseMsgGrant","grant","baseMsgExec","baseMsgRevoke","baseBaseAccount","accountNumber","sequence","pubKey","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseConsensus","block","Consensus","baseLastValidatorPower","basePlan","info","Plan","basePublicKey","PublicKey","ed25519","secp256k1","baseValidatorSet","totalVotingPower","ValidatorSet","validators","proposer","votingPower","proposerPriority","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","baseGenericAuthorization","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgVoteWeighted","baseMsgDeposit"],"mappings":"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","file":"js/app.3abd27b9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = { denom: '', amount: 0, sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/dig/dig/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/dig/dig/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: data }),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: data }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: data }),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nexport default {\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" refresh=\"true\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=7102f0da\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/dig/dig/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/dig/dig/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/dig/dig/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n    async function connect() {\n        await window.keplr.experimentalSuggestChain({\n            chainId: \"dig\",\n            chainName: \"Dig\",\n            rpc: \"http://165.232.167.156:26657\",\n            rest: \"http://165.232.167.156:1317\",\n            bip44: {\n                coinType: 118,\n            },\n            bech32Config: {\n                bech32PrefixAccAddr: \"dig\",\n                bech32PrefixAccPub: \"dig\" + \"pub\",\n                bech32PrefixValAddr: \"dig\" + \"valoper\",\n                bech32PrefixValPub: \"dig\" + \"valoperpub\",\n                bech32PrefixConsAddr: \"dig\" + \"valcons\",\n                bech32PrefixConsPub: \"dig\" + \"valconspub\",\n           },\n            currencies: [\n                {\n                    coinDenom: \"DIG\",\n                    coinMinimalDenom: \"udig\",\n                    coinDecimals: 6,\n                    coinGeckoId: \"dig\",\n                },\n            ],\n            feeCurrencies: [\n                {\n                    coinDenom: \"DIG\",\n                    coinMinimalDenom: \"udig\",\n                    coinDecimals: 6,\n                    coinGeckoId: \"dig\",\n                },\n            ],\n            stakeCurrency: {\n                coinDenom: \"DIG\",\n                coinMinimalDenom: \"udig\",\n                coinDecimals: 6,\n                coinGeckoId: \"dig\",\n            },\n            coinType: 118,\n            gasPriceStep: {\n                low: 0.01,\n                average: 0.025,\n                high: 0.03,\n            },\n        });\n    }\n    connect();\n\n}); \n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}